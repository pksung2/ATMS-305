---------------------------------------------------------------
OUTPUT FROM PROBLEM 1
pksung2@keeling-f01 Week5Answers: $ cat test.py
#!/usr/bin/python

#defining the filename
filename='aravg.ann.land_ocean.90S.90N.v4.0.1.201612.asc'
wxdata = {'year':[],'anomaly':[]}       #define dictionary

#open a file and read its contents
with open(filename, "r") as f: #read all the lines in the file
        alist = f.read().splitlines()

#looping over all the lines in the file
for line in alist: #iterate through lines
        wxdata['year'].append(int(line.split()[0]))
        wxdata['anomaly'].append(float(line.split()[1]))

DATA = zip(wxdata['year'],wxdata['anomaly'])
DATA = sorted(DATA, key=lambda x: x[1], reverse=True)

newfile = open('top10warmest.txt', 'w+')
print >> newfile, ("Ranking\tYear\tTemperature Anomaly (degrees C)\tTemperature Anomaly (degrees f)")

num = 0

for i in DATA[:10]:
        num += 1
        print >> newfile, "{0:1d}.\t{1:4d}\t{2:4f}\t\t\t{3:4f}".format(num, i[0], i[1], i[1]*9/5)

list (newfile)
pksung2@keeling-f01 Week5Answers: $ python test.py
pksung2@keeling-f01 Week5Answers: $ cat top10warmest.txt
Ranking Year    Temperature Anomaly (degrees C) Temperature Anomaly (degrees f)
1.      2016    0.690951                        1.243712
2.      2015    0.654480                        1.178064
3.      2014    0.495471                        0.891848
4.      2010    0.456035                        0.820863
5.      2013    0.422519                        0.760534
6.      2005    0.413196                        0.743753
7.      2009    0.391374                        0.704473
8.      1998    0.389096                        0.700373
9.      2012    0.378706                        0.681671
10.     2003    0.368062                        0.662512
pksung2@keeling-f01 Week5Answers: $

---------------------------------------------------------------
OUTPUT FROM PROBLEM 2

pksung2@keeling Week5Answers: $ cat problem2.py
#!/usr/bin/python

#defining the filename
filename = 'CMI.csv'
cdict = {'station':[],'valid':[],'tmpf':[],'presentwx':[]}

#open file, read its contents
with open(filename, "r") as f:
        clist = f.read().splitlines()

#separate columns into the dictionary keys
for line in clist:
        cdict['station'].append(line.split(',')[0])
        cdict['valid'].append(line.split(',')[1])
        cdict['tmpf'].append(line.split(',')[2])
        cdict['presentwx'].append(line.split(',')[-1])

#initialize SN counter
SN=0

#begin incrementing SN counter by searching each string in list
for i in cdict['presentwx']:
        if 'SN' in i:
#               print (i)
                SN+=1

#make highest temperature and date available
temperature = sorted(zip(cdict['tmpf'], cdict['valid']))

#initialize total temperature counter
total=0
temptotal=0

#find highest temperature recorded
for i in temperature:
        try:
                float(i[0])
                temp = i
                total += 1
                temptotal+=float(i[0])
        except ValueError:
                pass

#print(len(cdict['presentwx']))
print("Total reports of snow: {0}".format(SN))
print("Fraction of reports with snow: {0}/{1}".format(SN, len(cdict['presentwx'])))
print("Highest temperature: {0}F at {1}".format(temp[0], temp[1]))
print("Mean temperature: {0:5.2f}F".format(temptotal/total))
pksung2@keeling Week5Answers: $ python problem2.py
Total reports of snow: 310
Fraction of reports with snow: 310/10971
Highest temperature: 93.92F at 2016-06-11 14:53
Mean temperature: 54.15F
pksung2@keeling Week5Answers: $

---------------------------------------------------------------
